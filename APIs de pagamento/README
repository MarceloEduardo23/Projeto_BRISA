
Gateway de Pagamentos com Flask
Este projeto √© um backend em Python que serve como um gateway de pagamentos centralizado, integrando Stripe, PayPal e Mercado Pago. A aplica√ß√£o √© constru√≠da com Flask e organizada em uma arquitetura de servi√ßos para facilitar a manuten√ß√£o e escalabilidade.

‚ú® Funcionalidades
M√∫ltiplos Gateways: Suporte nativo para Stripe, PayPal e Mercado Pago (Cart√£o e Pix).

Checkout por Redirecionamento: Cria√ß√£o de links de pagamento que direcionam o usu√°rio para um ambiente seguro do provedor escolhido.

Processamento de Webhooks: Endpoint dedicado e seguro para receber e validar notifica√ß√µes do Stripe, confirmando pagamentos de forma ass√≠ncrona.

Configura√ß√£o Segura: Utiliza vari√°veis de ambiente (.env) para gerenciar chaves de API e outras informa√ß√µes sens√≠veis.

üöÄ Guia de Instala√ß√£o e Execu√ß√£o (Passo a Passo)
Siga estes passos para configurar e executar o projeto em seu ambiente local.

Passo 1: Clonar o Reposit√≥rio
git clone ...

Passo 2: Criar e Ativar o Ambiente Virtual
O uso de um ambiente virtual √© crucial para isolar as depend√™ncias do projeto.

# Crie o ambiente virtual
python -m venv venv

# Ative o ambiente
# No Windows:
venv\Scripts\activate
# No macOS/Linux:
source venv/bin/activate

Passo 3: Instalar as Depend√™ncias
Com o ambiente ativado, instale todas as bibliotecas necess√°rias com um √∫nico comando:

pip install -r requirements.txt

Passo 4: Configurar as Vari√°veis de Ambiente
Este √© o passo mais importante. Suas chaves de API secretas ser√£o armazenadas aqui.

Abra o arquivo .env e preencha TODAS as vari√°veis com suas pr√≥prias credenciais de desenvolvedor (sandbox/teste) de cada servi√ßo.

Passo 5: Configurar o Ngrok (Essencial para Testes)
Para que os servi√ßos de pagamento (especialmente os webhooks do Stripe) possam se comunicar com sua m√°quina local, voc√™ precisa expor seu servidor local √† internet. A ferramenta perfeita para isso √© o Ngrok.

Crie uma conta: V√° para o site do Ngrok e crie uma conta gratuita.

Baixe o Ngrok: Siga as instru√ß√µes no dashboard para baixar o execut√°vel do Ngrok para o seu sistema operacional.

Conecte sua conta: Execute o comando de autentica√ß√£o que o dashboard do Ngrok fornece (geralmente algo como ./ngrok config add-authtoken SEU_TOKEN).

Inicie o t√∫nel: Com sua aplica√ß√£o Flask ainda N√ÉO rodando, inicie o Ngrok para redirecionar para a porta 5000 (a porta padr√£o do Flask).

./ngrok http 5000

Copie a URL: O Ngrok exibir√° uma tela com v√°rias informa√ß√µes. Copie a URL Forwarding que termina com .ngrok-free.app (use a que come√ßa com https):

Atualize o .env: Cole a URL que voc√™ copiou no campo NGROK_URL dentro do seu arquivo .env.

# .env
NGROK_URL="https://SUA_URL_AQUI.ngrok-free.app"

Passo 6: Executar a Aplica√ß√£o
Agora, com o Ngrok rodando em um terminal e o .env totalmente configurado, abra outro terminal, ative o ambiente virtual (se ainda n√£o estiver ativo) e inicie a aplica√ß√£o Flask:

flask run

Sua aplica√ß√£o estar√° rodando localmente na porta 5000 e acess√≠vel publicamente atrav√©s da sua URL do Ngrok!

üìñ Como Usar
Para criar um pagamento, envie uma requisi√ß√£o POST para o endpoint /create_payment com um corpo JSON.

Endpoint: /create_payment

M√©todo: POST

Corpo da Requisi√ß√£o (Exemplo):

{
  "payment_method": "stripe",
  "items": [
    { "name": "Smartphone Premium", "quantity": 1 },
    { "name": "Fones de Ouvido Bluetooth", "quantity": 1 }
  ],
  "user_data": {
    "email": "cliente.teste@email.com",
    "name": "Fulano de Tal"
  }
}

Resposta de Sucesso: A API retornar√° uma URL de pagamento para a qual voc√™ deve redirecionar o usu√°rio.

{
  "redirect_url": "https://checkout.stripe.com/pay/cs_test_..."
}

ü™ù Webhooks
Para que os webhooks do Stripe funcionem, voc√™ precisa registrar a URL do seu webhook no Dashboard do Stripe.

URL do Endpoint: SUA_URL_DO_NGROK/webhook-stripe (ex: https://abcd-1234.ngrok-free.app/webhook-stripe)

Eventos para escutar: Selecione o evento checkout.session.completed.

Quando um pagamento for conclu√≠do, o Stripe enviar√° uma notifica√ß√£o para essa URL, e voc√™ ver√° a mensagem "SUCESSO (Webhook Stripe)..." no terminal onde sua aplica√ß√£o Flask est√° rodando.
